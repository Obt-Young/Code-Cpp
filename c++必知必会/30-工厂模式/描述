场景举例：

当有两个平行的类A 和 类B，二者的必要信息是完全交集的。

当有类A的实例tmpA，那么想通过A类获得B类的实例tmpB，该怎么获取？

实现1：
	在类B中创建一个方法，参数是类A，然后依次解析类A中的元素，在new一个实例,
	把这些元素都写进去，然后返回实例地址。

实现2：
	在类A中创建一个纯虚函数，要求自己的所有子类都必须实现这个函数，而这个函数
	的原型为  virtual B* getB()=0; 即返回一个B类型，因为这个函数属于类A，所以
	可以自由访问所有私有成员变量。


比较：
	二者的思路都是一样的，但是方法2的扩展性更好。我们把实现2叫做工厂模式
