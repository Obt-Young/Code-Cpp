#1  -   如果成员方法尾部有const，那么代表当前成员你方法不会修改本实例的任何成员变量的值，否则编译时报错

#2  -   友元：1.成员变量都是private的，其他类无法访问，可以通过友元来访问其他类的成员变量
	      2.通过把函数定义成“某个类”的友元，可以让函数具备和类成员函数一样的访问权限。
	      3.友元函数只能在类中“声明”和“定义”（看起来和成员函数一样，也可以在h中声明，在cpp中实现），但是！“友元函数不属于类”，所以使用的时候不能按照
                成员函数的方法来使用。
	      4.友元函数定义在那个类中，那么就是哪个类的友元(这很直观)
	
	小结：1.友元是用来修饰函数的；
	      2.友元函数定义在想要作用的类里，但是！声明的时候需要加friend，实现的时候不要加，比如：
			xxx.h
			class xxx{
				private:
					int a;
				public:
			
				friend void func(void);
			}
			
			xxx.cpp
			void xxx::func(void){

			}
	      3.友元函数除了使用方法和成员函数不一样外，其他全一样；
	      4.因为友元函数是要被外部调用的，那么在类定义时，应当被划归到public标签下

#3  -   
